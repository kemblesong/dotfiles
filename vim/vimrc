" VIM CONFIGURATION
" ~/.vimrc
" Kemble Song <kemblesong>
" ==============================================================================

" Map the leader key to space
let g:mapleader = "\<Space>"
" Plugins
" ==============================================================================
call plug#begin()

Plug 'w0rp/ale'
  let g:ale_linters = {
  \   'javascript': ['eslint'],
  \   'scss': [''],
  \}

Plug 'mhartington/oceanic-next'
Plug 'atelierbram/Base2Tone-vim'
Plug 'rakr/vim-two-firewatch'

Plug 'vim-airline/vim-airline'
  let g:airline_powerline_fonts = 1
  let g:airline#extensions#tabline#enabled = 1
  let g:airline_left_sep = ''
  let g:airline_right_sep = ''
  let g:airline_left_alt_sep = '|'
  let g:airline_right_alt_sep = '|'
  let g:airline_theme='Base2Tone_EveningDark'

Plug 'jszakmeister/vim-togglecursor'
Plug 'Yggdroot/indentLine'
  let g:indentLine_char = '‚é∏'

Plug 'Shougo/unite.vim'
Plug 'Shougo/vimfiler.vim'
  nnoremap <silent> <leader>\ :VimFilerExplorer<CR>

Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'junegunn/fzf.vim'
  let $FZF_DEFAULT_COMMAND = 'ag -g ""'
  nnoremap <silent> <leader><space> :Files<CR>
  nnoremap <silent> <leader>a :Buffers<CR>
  nnoremap <silent> <leader>; :Tags<CR>
  nnoremap <silent> <leader>. :Lines<CR>
  nnoremap <silent> <leader>/ :Ag<CR>
  let g:fzf_colors =
            \ { 'fg':      ['fg', 'Normal'],
            \ 'bg':      ['bg', 'Normal'],
            \ 'hl':      ['fg', 'Comment'],
            \ 'fg+':     ['fg', 'CursorLine', 'CursorColumn', 'Normal'],
            \ 'bg+':     ['bg', 'CursorLine', 'CursorColumn'],
            \ 'hl+':     ['fg', 'Statement'],
            \ 'info':    ['fg', 'PreProc'],
            \ 'prompt':  ['fg', 'Conditional'],
            \ 'pointer': ['fg', 'Exception'],
            \ 'marker':  ['fg', 'Keyword'],
            \ 'spinner': ['fg', 'Label'],
            \ 'header':  ['fg', 'Comment'] }

Plug 'tpope/vim-fugitive'
  nnoremap <leader>gs :Gstatus<CR>
  nnoremap <leader>gc :Gcommit<CR>

Plug 'airblade/vim-gitgutter'

Plug 'junegunn/goyo.vim'
  nnoremap <leader>df :Goyo<CR>

Plug 'tpope/vim-surround'
Plug 'tpope/vim-endwise'
Plug 'jiangmiao/auto-pairs'
Plug 'maralla/completor.vim'

Plug 'sheerun/vim-polyglot'
  autocmd Filetype javascript setlocal ts=4 sw=4
  autocmd Filetype scss setlocal ts=4 sw=4
  autocmd Filetype html setlocal ts=4 sw=4
  autocmd Filetype htmldjango setlocal ts=4 sw=4
  autocmd Filetype liquid setlocal ts=4 sw=4
  autocmd Filetype blade setlocal ts=4 sw=4
  autocmd Filetype php setlocal ts=4 sw=4

Plug 'mxw/vim-jsx', { 'for': 'javascript' }
  let g:jsx_ext_required = 0

Plug 'ryanoasis/vim-devicons'

call plug#end()

" Sensible stuff
" ==============================================================================
if has('autocmd')
  filetype plugin indent on
endif

" True color support
set termguicolors
" if has('termguicolors')
  " set t_8f=[38;2;%lu;%lu;%lum
  " set t_8b=[48;2;%lu;%lu;%lum
" endif

if has('syntax') && !exists('g:syntax_on')
  syntax enable
endif

if !&scrolloff
  set scrolloff=1
endif
if !&sidescrolloff
  set sidescrolloff=5
endif
set display+=lastline

" UI
" ==============================================================================
set background=dark
colorscheme Base2Tone_EveningDark
set number              " Show line numbers
set relativenumber      " Set relative line numbers as default
" set cursorline          " Highlight cursor line
set showmatch           " Show matching brackets
set showcmd             " Show command
set ruler               " Show line positions
set visualbell          " don't beep
set noerrorbells        " don't beep
set noshowmode          " don't show mode
set laststatus=2        " don't show last status
set showtabline=0       " Don't show tabline
set wildmenu
set encoding=utf8

" Editor
" ==============================================================================
set expandtab	        " Tabs to spaces
set smarttab            " Smart tabs
set shiftwidth=2
set tabstop=2
set hlsearch            " Highlight search results.
set incsearch           " Jump to search result
set ignorecase          " Make searching case insensitive
set smartcase           " ... unless the query has capital letters.
set autoindent          " Set auto indent
set smartindent         " Set smart indent
set nowrap              " Don't wrap lines
set hidden              " Allows buffers to be hidden even if modified.
set ttimeout
set ttimeoutlen=100
set complete-=i
set backspace=indent,eol,start

" Keybindings
" ==============================================================================
nnoremap H ^
nnoremap L $

nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

" Move to the next buffer
nnoremap <silent><leader>l :bnext<CR>
" Move to the previous buffer
nnoremap <silent><leader>h :bprevious<CR>
" Close the current buffer and move to the previous one
nnoremap <silent><leader>w :bp <BAR> bd #<CR>
" Show all open buffers and their status
nnoremap <silent><leader>bl :ls<CR>
" Clear highlight
nnoremap <silent><leader>c :noh<CR>
" Edit neovim config
nnoremap <silent><leader>ev :e<space>~/.vimrc<CR>
" Edit fish config
nnoremap <silent><leader>ez :e<space>~/.zshrc<CR>
" Edit tmux config
nnoremap <silent><leader>et :e<space>~/.tmux.conf<CR>
" Save
nnoremap <silent><leader>s :w<CR>
" Quit
nnoremap <silent><leader>q :q<CR>
" Toggle relative/absolute line numbers
nnoremap <silent><leader>n :set rnu! rnu? <cr>
" jk is escape
inoremap jk <esc>
" System clipboard copy/paste
vnoremap <silent><Leader>d "+d
vnoremap <silent><Leader>y "+y
vnoremap <silent><Leader>p "+p
vnoremap <silent><Leader>P "+P
nnoremap <silent><Leader>d "+d
nnoremap <silent><Leader>y "+y
nnoremap <silent><Leader>p "+p
nnoremap <silent><Leader>P "+P

" Removes trailing spaces
nnoremap <silent><Leader>t :call TrimWhiteSpace()<CR>

" Misc functions
" ==============================================================================
function! TrimWhiteSpace()
    %s/\s\+$//e
endfunction
